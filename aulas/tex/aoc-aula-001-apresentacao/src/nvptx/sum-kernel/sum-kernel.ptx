//
// Generated by LLVM NVPTX Back-End
//

.version 3.1
.target sm_20, texmode_independent
.address_size 64

	// .globl	sum_kernel
                                        // @sum_kernel
.entry sum_kernel(
	.param .u64 .ptr .global .align 4 sum_kernel_param_0,
	.param .u64 .ptr .global .align 4 sum_kernel_param_1,
	.param .u64 .ptr .global .align 4 sum_kernel_param_2
)
{
	.reg .pred %p<396>;
	.reg .s16 %rc<396>;
	.reg .s16 %rs<396>;
	.reg .s32 %r<396>;
	.reg .s64 %rl<396>;
	.reg .f32 %f<396>;
	.reg .f64 %fl<396>;

// BB#0:                                // %entry
	ld.param.u64 	%rl1, [sum_kernel_param_0];
	mov.u32 	%r0, %tid.x;
	ld.param.u64 	%rl2, [sum_kernel_param_1];
	mov.u32 	%r1, %ntid.x;
	ld.param.u64 	%rl0, [sum_kernel_param_2];
	mov.u32 	%r2, %ctaid.x;
	mad.lo.s32 	%r0, %r2, %r1, %r0;
	mul.wide.s32 	%rl3, %r0, 4;
	add.s64 	%rl1, %rl1, %rl3;
	ld.global.f32 	%f0, [%rl1];
	add.s64 	%rl1, %rl2, %rl3;
	ld.global.f32 	%f1, [%rl1];
	add.f32 	%f0, %f0, %f1;
	add.s64 	%rl0, %rl0, %rl3;
	st.global.f32 	[%rl0], %f0;
	ret;
}

